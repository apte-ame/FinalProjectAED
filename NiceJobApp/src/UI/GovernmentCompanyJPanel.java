/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.awt.Font;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.AcceptedJobs;
import model.AcceptedJobsDir;
import model.Company;
import model.Government;
import model.GovernmentDir;
import model.UniStudentDir;

/**
 *
 * @author naini
 */
public class GovernmentCompanyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Choice_JPanel
     */
    JSplitPane splitPane;
    String choice = "";
    AcceptedJobsDir acceptedJobs = new AcceptedJobsDir();
    Connection conn = null;
    Integer selectedRow = -1;
    UniStudentDir uniStudents = new UniStudentDir();
    GovernmentDir govs = new GovernmentDir();
    AcceptedJobs selectedJob = new AcceptedJobs();
    Government selectedGov = new Government();
    
    public GovernmentCompanyJPanel(JSplitPane splitPane, Connection conn, Government selectedGov) {
        initComponents();
        this.splitPane = splitPane;
        this.conn = conn;
        this.selectedGov = selectedGov;
        getAllAcceptedJobs();
        tblStudentDetails.getTableHeader().setFont( new Font( "Trebuchet MS" , Font.PLAIN, 18 ));
        populateStudentDetailsTable(acceptedJobs);
     
        btnUpdateStatus.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblStudentDetails = new javax.swing.JTable();
        btnSearch = new button.Button();
        btnRefreshTable = new button.Button();
        btnClear = new button.Button();
        btnViewSelected = new button.Button();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCompanyName = new javax.swing.JTextField();
        lblCompanyName = new javax.swing.JLabel();
        cmbLevel = new javax.swing.JComboBox<>();
        lblLevel = new javax.swing.JLabel();
        txtJobTitle = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        lblSalary = new javax.swing.JLabel();
        btnUpdateStatus = new button.Button();
        lblSalary1 = new javax.swing.JLabel();
        lblSalary3 = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtUniversity = new javax.swing.JTextField();
        lblUniversity = new javax.swing.JLabel();
        txtSevisId = new javax.swing.JTextField();
        lblUniversity1 = new javax.swing.JLabel();
        txtExpGradDate = new javax.swing.JTextField();
        lblUniversity2 = new javax.swing.JLabel();
        txtCourse = new javax.swing.JTextField();
        lblCourse = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGovComments = new javax.swing.JTextArea();
        back_btn = new button.Button();

        setEnabled(false);

        kGradientPanel1.setkEndColor(new java.awt.Color(51, 204, 0));
        kGradientPanel1.setkStartColor(new java.awt.Color(102, 153, 255));

        tblStudentDetails.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        tblStudentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sevis Id", "Company Name", "Position", "Role", "Salary", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblStudentDetails);

        btnSearch.setBackground(new java.awt.Color(204, 255, 204));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_7.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRefreshTable.setBackground(new java.awt.Color(204, 255, 204));
        btnRefreshTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_4.png"))); // NOI18N
        btnRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTableActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(204, 255, 204));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_8.png"))); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnViewSelected.setBackground(new java.awt.Color(204, 255, 204));
        btnViewSelected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_9.png"))); // NOI18N
        btnViewSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSelectedActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel1.setText("Employee Details");

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel3.setText("Employer Details");

        txtCompanyName.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtCompanyName.setEnabled(false);

        lblCompanyName.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblCompanyName.setText("Company Name");

        cmbLevel.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        cmbLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Specialist", "Associate", "Senior Associate", "Manager", "Analyst" }));
        cmbLevel.setEnabled(false);

        lblLevel.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblLevel.setText("Level");

        txtJobTitle.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtJobTitle.setEnabled(false);

        lblTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblTitle.setText("Job Title");

        txtStartDate.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtStartDate.setEnabled(false);

        lblStartDate.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblStartDate.setText("Start Date");

        txtSalary.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtSalary.setEnabled(false);

        lblSalary.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblSalary.setText("Salary");

        btnUpdateStatus.setText("Update Status");
        btnUpdateStatus.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnUpdateStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStatusActionPerformed(evt);
            }
        });

        lblSalary1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblSalary1.setText("Comments");

        lblSalary3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblSalary3.setText("Status");

        txtStudentName.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtStudentName.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel9.setText("Name");

        txtUniversity.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtUniversity.setEnabled(false);

        lblUniversity.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblUniversity.setText("University");

        txtSevisId.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtSevisId.setEnabled(false);

        lblUniversity1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblUniversity1.setText("Sevis Id");

        txtExpGradDate.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtExpGradDate.setEnabled(false);

        lblUniversity2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblUniversity2.setText("Expected Grad Date");

        txtCourse.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        txtCourse.setEnabled(false);

        lblCourse.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lblCourse.setText("Course");

        cmbStatus.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending Gov. Approval", "Issues with Start Date", "Issues with Salary", "Issues with Level", "Issues with Job Title", "Approved" }));

        txtGovComments.setColumns(20);
        txtGovComments.setRows(5);
        jScrollPane2.setViewportView(txtGovComments);

        back_btn.setBackground(new java.awt.Color(204, 204, 255));
        back_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_3.png"))); // NOI18N
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(jLabel1)
                                .addGap(162, 162, 162)
                                .addComponent(jLabel3))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(btnRefreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnViewSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                        .addComponent(lblUniversity1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtSevisId, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel9)
                                                            .addComponent(lblUniversity))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(txtStudentName)
                                                            .addComponent(txtUniversity, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                        .addComponent(lblUniversity2)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtExpGradDate, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(lblSalary3)
                                                            .addComponent(lblCourse))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtCourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(cmbStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addGap(125, 125, 125)
                                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                                        .addComponent(lblSalary)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                                        .addComponent(lblTitle)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtJobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(lblCompanyName)
                                                            .addComponent(lblLevel))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(txtCompanyName)
                                                            .addComponent(cmbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                                        .addComponent(lblStartDate)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                .addGap(78, 78, 78)
                                                .addComponent(lblSalary1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnUpdateStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 135, Short.MAX_VALUE))))))
                    .addComponent(jScrollPane6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        kGradientPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClear, btnRefreshTable, btnSearch, btnViewSelected});

        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnViewSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRefreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUniversity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUniversity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSevisId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUniversity1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtExpGradDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUniversity2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCourse)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCompanyName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLevel)
                            .addComponent(cmbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStartDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSalary))))
                .addGap(28, 28, 28)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSalary3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSalary1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        kGradientPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClear, btnRefreshTable, btnSearch, btnViewSelected});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Please select a field:"));
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement("Role");
        model.addElement("Level");
        model.addElement("Salary");

        JComboBox comboBox = new JComboBox(model);
        panel.add(comboBox);

        int resultField = JOptionPane.showConfirmDialog(null, panel, "Search by Field", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(resultField == JOptionPane.OK_OPTION){
            String fieldSelected = comboBox.getSelectedItem().toString();
            DefaultComboBoxModel role = new DefaultComboBoxModel();

            role.addElement("Software Developer");
            role.addElement("Web Designer");
            role.addElement("Data Analyst");
            role.addElement("Business Analyst");
            role.addElement("Data Scientist");
            role.addElement("Data Engineer");
            role.addElement("Project Manager");

            JComboBox comboBoxRole = new JComboBox(role);

            DefaultComboBoxModel level = new DefaultComboBoxModel();
            level.addElement("Specialist");
            level.addElement("Associate");
            level.addElement("Senior Associate");
            level.addElement("Manager");
            level.addElement("Analyst");

            JComboBox comboBoxLevel = new JComboBox(level);

            JTextField txtField = new JTextField("");

            panel.add(new JLabel("Value:"));

            if(fieldSelected.equalsIgnoreCase("Role")){
                comboBox.setEnabled(false);
                panel.add(comboBoxRole);
            }else if(fieldSelected.equalsIgnoreCase("Level")){
                comboBox.setEnabled(false);
                panel.add(comboBoxLevel);
            }else{
                comboBox.setEnabled(false);
                panel.add(txtField);
            }

            int resultValue = JOptionPane.showConfirmDialog(null, panel, "Search by Field", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(resultValue == JOptionPane.OK_OPTION) {

                String fieldValue;
                if(fieldSelected.equalsIgnoreCase("Role")){
                    fieldValue = comboBoxRole.getSelectedItem().toString();
                } else if(fieldSelected.equalsIgnoreCase("Level")){
                    fieldValue = comboBoxLevel.getSelectedItem().toString();
                } else {
                    fieldValue = txtField.getText();
                }

                if(fieldValue.equalsIgnoreCase("")){
                    JOptionPane.showMessageDialog(this, "Please enter a value");
                }else{
                    AcceptedJobsDir acceptedJobsDir = new AcceptedJobsDir();
                    ArrayList<AcceptedJobs> resultAcceptedJobs = new ArrayList<AcceptedJobs>();

                    if(fieldSelected.equalsIgnoreCase("Salary")){
                        resultAcceptedJobs = acceptedJobs.searchBySalary(Double.valueOf(fieldValue));
                    }else if(fieldSelected.equalsIgnoreCase("Role")){
                        resultAcceptedJobs = acceptedJobs.searchByRole(fieldValue);
                    }else if(fieldSelected.equalsIgnoreCase("Level")){
                        resultAcceptedJobs = acceptedJobs.searchByLevel(fieldValue);
                    }else{
                        resultAcceptedJobs = null;
                    }

                    if(resultAcceptedJobs.isEmpty()){
                        JOptionPane.showMessageDialog(this, "No Results Found");
                        populateStudentDetailsTable(acceptedJobs);
                    }else{
                        JOptionPane.showMessageDialog(this, "Entries found");
                        acceptedJobsDir.setAcceptedJobsList(resultAcceptedJobs);
                        populateStudentDetailsTable(acceptedJobsDir);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Search Cancelled");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Search Cancelled");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTableActionPerformed
        // TODO add your handling code here:
        populateStudentDetailsTable(acceptedJobs);
    }//GEN-LAST:event_btnRefreshTableActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnViewSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSelectedActionPerformed
        //         TODO add your handling code here:
        selectedRow = tblStudentDetails.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }else{
            DefaultTableModel tableModel = (DefaultTableModel) tblStudentDetails.getModel();
            AcceptedJobs acceptedJob = (AcceptedJobs) tableModel.getValueAt(selectedRow, 0);
            displayJob(acceptedJob);
            selectedJob = acceptedJob;
        }
    }//GEN-LAST:event_btnViewSelectedActionPerformed

    private void btnUpdateStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStatusActionPerformed
        // TODO add your handling code here:
        updateAcceptedJobDetails(selectedJob);
        //        btnPostListing.setEnabled(false);
    }//GEN-LAST:event_btnUpdateStatusActionPerformed

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
        if(res == 0) {
            GovernmentChoiceJPanel choicePanel = new GovernmentChoiceJPanel(splitPane, conn);
            splitPane.setRightComponent(choicePanel);
        }
        else{
            //Pressed No
        }
       
    }//GEN-LAST:event_back_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.Button back_btn;
    private button.Button btnClear;
    private button.Button btnRefreshTable;
    private button.Button btnSearch;
    private button.Button btnUpdateStatus;
    private button.Button btnViewSelected;
    private javax.swing.JComboBox<String> cmbLevel;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblSalary1;
    private javax.swing.JLabel lblSalary3;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUniversity;
    private javax.swing.JLabel lblUniversity1;
    private javax.swing.JLabel lblUniversity2;
    private javax.swing.JTable tblStudentDetails;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtExpGradDate;
    private javax.swing.JTextArea txtGovComments;
    private javax.swing.JTextField txtJobTitle;
    private javax.swing.JTextField txtSalary;
    private javax.swing.JTextField txtSevisId;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtUniversity;
    // End of variables declaration//GEN-END:variables

    public void getAllAcceptedJobs(){
        try {
            String queryAcceptedJobs = "SELECT * FROM accepted_jobs WHERE government_name = '" + selectedGov.getName() + "'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(queryAcceptedJobs);                
                while (rs.next())
                {
                    AcceptedJobs acceptedJob = acceptedJobs.addAcceptedJobs();
                    
                    acceptedJob.setCompanyId(rs.getInt("company_id"));
                    acceptedJob.setCompanyName(rs.getString("company_name"));
                    acceptedJob.setCourse(rs.getString("course"));
                    acceptedJob.setJobListingsId(rs.getInt("job_listings_id"));
                    acceptedJob.setSevisId(rs.getString("student_gov_id"));
                    acceptedJob.setExpectedGradDate(LocalDate.parse(rs.getString("expected_grad_date")));
                    acceptedJob.setJobTitle(rs.getString("job_title"));
                    acceptedJob.setLevel(rs.getString("level"));
                    acceptedJob.setNationality(rs.getString("nationality"));
                    acceptedJob.setPosition(rs.getString("position"));
                    acceptedJob.setRole(rs.getString("role"));
                    acceptedJob.setStudentName(rs.getString("student_name"));
                    acceptedJob.setUniversity(rs.getString("university"));
                    acceptedJob.setSalary(Double.valueOf(rs.getString("salary")));
                    acceptedJob.setStartDate(LocalDate.parse(rs.getString("start_date")));
                    
                    if(rs.getString("gov_comments")!=null){
                        acceptedJob.setGovComments(rs.getString("gov_comments"));
                    }else{
                        acceptedJob.setGovComments("");
                    }
                    
                    if(rs.getString("gov_status")!=null){
                        acceptedJob.setGovStatus(rs.getString("gov_status"));
                    }else{
                        acceptedJob.setGovStatus("Pending with HR");
                    }
                    
                    acceptedJob.setGovIssues(rs.getString("gov_issues"));
                    
                    if(rs.getString("government_name")!=null){
                        acceptedJob.setGovName(rs.getString("government_name"));
                    }

                    acceptedJob.setLocation(rs.getString("location"));
                    
                }
                st.close();
        } catch (SQLException ex) {
            Logger.getLogger(UniExamCellJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void populateStudentDetailsTable(AcceptedJobsDir acceptedJobs){
        DefaultTableModel tableModel = (DefaultTableModel) tblStudentDetails.getModel();
        tableModel.setRowCount(0);
        
        for(AcceptedJobs acceptedJob : acceptedJobs.getAcceptedJobsList()){
            Object row[] = new Object[6];
            row[0] = acceptedJob;
            row[1] = acceptedJob.getCompanyName();
            row[2] = acceptedJob.getPosition();
            row[3] = acceptedJob.getRole();
            row[4] = acceptedJob.getSalary().toString();
            row[5] = acceptedJob.getGovStatus();
            
            tableModel.addRow(row);
        }
    }
    
    public void clearAllFields(){
        txtStudentName.setText("");
        txtCompanyName.setText("");
        txtCourse.setText("");
        txtExpGradDate.setText("");
        txtGovComments.setText("");
        txtJobTitle.setText("");
        txtSalary.setText("");
        txtSevisId.setText("");
        txtStartDate.setText("");
        txtUniversity.setText("");
        
        cmbLevel.setSelectedIndex(0);
        
//        txtStatus.setText("");
        cmbStatus.setSelectedIndex(0);
        txtGovComments.setText("");
        
        cmbStatus.setEnabled(false);
        txtGovComments.setEnabled(false);
        
        btnUpdateStatus.setEnabled(false);

    }
    
    public void displayJob(AcceptedJobs acceptedJob){
        txtStudentName.setText(acceptedJob.getStudentName());
        txtCompanyName.setText(acceptedJob.getCompanyName());
        txtCourse.setText(acceptedJob.getCourse());
        txtExpGradDate.setText(acceptedJob.getExpectedGradDate().toString());
        txtGovComments.setText(acceptedJob.getGovComments());
        txtJobTitle.setText(acceptedJob.getJobTitle());
        txtSalary.setText(acceptedJob.getSalary().toString());
        txtSevisId.setText(acceptedJob.getSevisId());
        txtStartDate.setText(acceptedJob.getStartDate().toString());
        txtUniversity.setText(acceptedJob.getUniversity());
        
        cmbLevel.setSelectedItem(acceptedJob.getLevel());
        
        cmbStatus.setSelectedItem(acceptedJob.getGovIssues());
        if(acceptedJob.getGovComments()!=null){
            txtGovComments.setText(acceptedJob.getGovComments());
        }else{
            txtGovComments.setText("");
        }
        
        if(acceptedJob.getGovIssues().equalsIgnoreCase("Approved")){
            txtGovComments.setEnabled(false);
            btnUpdateStatus.setEnabled(false);
            cmbStatus.setEnabled(false);
        }else{
            txtGovComments.setEnabled(true);
            btnUpdateStatus.setEnabled(true);
            cmbStatus.setEnabled(true);
        }
    }
    
    public void updateAcceptedJobDetails(AcceptedJobs acceptedJob){
        updateAcceptedJobInDb(acceptedJob);
        acceptedJobs.removeAllAcceptedJobs();
        getAllAcceptedJobs();
        populateStudentDetailsTable(acceptedJobs);
        clearAllFields();
    }
    
    public void updateAcceptedJobInDb(AcceptedJobs acceptedJob){
        try {
            String queryUpdateJobApp = "";
            if(cmbStatus.getSelectedItem().toString().equalsIgnoreCase("Approved")){
                queryUpdateJobApp = "UPDATE accepted_jobs SET level = '" + cmbLevel.getSelectedItem().toString() + "' , job_title = '" + txtJobTitle.getText() + 
                    "' , start_date = '" + txtStartDate.getText() + "' , salary = '" + txtSalary.getText() + "' , gov_comments = '" + txtGovComments.getText() + "' , gov_status = 'Approved', gov_issues = '" + cmbStatus.getSelectedItem().toString() + "' WHERE job_listings_id = '" + acceptedJob.getJobListingsId().toString() + "' AND student_gov_id = '" + acceptedJob.getSevisId() +  "' AND company_id = '" + acceptedJob.getCompanyId().toString() +  "'";
            }else{
                queryUpdateJobApp = "UPDATE accepted_jobs SET level = '" + cmbLevel.getSelectedItem().toString() + "' , job_title = '" + txtJobTitle.getText() + 
                    "' , start_date = '" + txtStartDate.getText() + "' , salary = '" + txtSalary.getText() + "' , gov_comments = '" + txtGovComments.getText() + "' , gov_status = 'Pending with HR', gov_issues = '" + cmbStatus.getSelectedItem().toString() + "' WHERE job_listings_id = '" + acceptedJob.getJobListingsId().toString() + "' AND student_gov_id = '" + acceptedJob.getSevisId() +  "' AND company_id = '" + acceptedJob.getCompanyId().toString() +  "'";
            }
            
            Statement st = conn.createStatement();
            st.executeUpdate(queryUpdateJobApp);   
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(UniExamCellJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
